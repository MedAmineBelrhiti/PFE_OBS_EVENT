/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.orange.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the EvenementObs service. Represents a row in the &quot;OBS_EvenementObs&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.orange.model.impl.EvenementObsModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.orange.model.impl.EvenementObsImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EvenementObs
 * @generated
 */
@ProviderType
public interface EvenementObsModel
	extends BaseModel<EvenementObs>, ShardedModel, StagedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a evenement obs model instance should use the {@link EvenementObs} interface instead.
	 */

	/**
	 * Returns the primary key of this evenement obs.
	 *
	 * @return the primary key of this evenement obs
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this evenement obs.
	 *
	 * @param primaryKey the primary key of this evenement obs
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this evenement obs.
	 *
	 * @return the uuid of this evenement obs
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this evenement obs.
	 *
	 * @param uuid the uuid of this evenement obs
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the id event of this evenement obs.
	 *
	 * @return the id event of this evenement obs
	 */
	public long getIdEvent();

	/**
	 * Sets the id event of this evenement obs.
	 *
	 * @param idEvent the id event of this evenement obs
	 */
	public void setIdEvent(long idEvent);

	/**
	 * Returns the group ID of this evenement obs.
	 *
	 * @return the group ID of this evenement obs
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this evenement obs.
	 *
	 * @param groupId the group ID of this evenement obs
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this evenement obs.
	 *
	 * @return the company ID of this evenement obs
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this evenement obs.
	 *
	 * @param companyId the company ID of this evenement obs
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this evenement obs.
	 *
	 * @return the create date of this evenement obs
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this evenement obs.
	 *
	 * @param createDate the create date of this evenement obs
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this evenement obs.
	 *
	 * @return the modified date of this evenement obs
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this evenement obs.
	 *
	 * @param modifiedDate the modified date of this evenement obs
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the start date of this evenement obs.
	 *
	 * @return the start date of this evenement obs
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this evenement obs.
	 *
	 * @param startDate the start date of this evenement obs
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this evenement obs.
	 *
	 * @return the end date of this evenement obs
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this evenement obs.
	 *
	 * @param endDate the end date of this evenement obs
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the lieu of this evenement obs.
	 *
	 * @return the lieu of this evenement obs
	 */
	@AutoEscape
	public String getLieu();

	/**
	 * Sets the lieu of this evenement obs.
	 *
	 * @param lieu the lieu of this evenement obs
	 */
	public void setLieu(String lieu);

	/**
	 * Returns the description of this evenement obs.
	 *
	 * @return the description of this evenement obs
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this evenement obs.
	 *
	 * @param description the description of this evenement obs
	 */
	public void setDescription(String description);

	/**
	 * Returns the voting end date of this evenement obs.
	 *
	 * @return the voting end date of this evenement obs
	 */
	public Date getVotingEndDate();

	/**
	 * Sets the voting end date of this evenement obs.
	 *
	 * @param votingEndDate the voting end date of this evenement obs
	 */
	public void setVotingEndDate(Date votingEndDate);

	/**
	 * Returns the nbr user max of this evenement obs.
	 *
	 * @return the nbr user max of this evenement obs
	 */
	public int getNbrUserMax();

	/**
	 * Sets the nbr user max of this evenement obs.
	 *
	 * @param nbrUserMax the nbr user max of this evenement obs
	 */
	public void setNbrUserMax(int nbrUserMax);

	/**
	 * Returns the nbr user confirmed of this evenement obs.
	 *
	 * @return the nbr user confirmed of this evenement obs
	 */
	public int getNbrUserConfirmed();

	/**
	 * Sets the nbr user confirmed of this evenement obs.
	 *
	 * @param nbrUserConfirmed the nbr user confirmed of this evenement obs
	 */
	public void setNbrUserConfirmed(int nbrUserConfirmed);

	/**
	 * Returns the entity of this evenement obs.
	 *
	 * @return the entity of this evenement obs
	 */
	@AutoEscape
	public String getEntity();

	/**
	 * Sets the entity of this evenement obs.
	 *
	 * @param entity the entity of this evenement obs
	 */
	public void setEntity(String entity);

	/**
	 * Returns the manager name of this evenement obs.
	 *
	 * @return the manager name of this evenement obs
	 */
	@AutoEscape
	public String getManagerName();

	/**
	 * Sets the manager name of this evenement obs.
	 *
	 * @param managerName the manager name of this evenement obs
	 */
	public void setManagerName(String managerName);

	@Override
	public EvenementObs cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}